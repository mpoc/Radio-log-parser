package application;

import java.io.File;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.input.DragEvent;
import javafx.scene.input.Dragboard;
import javafx.scene.input.TransferMode;
import javafx.scene.layout.AnchorPane;

public class SampleController {
	@FXML
	private AnchorPane AnchorPane;
	@FXML
	private Button ParseButton;
//	@FXML
//	private ScrollPane ScrollPane;
	@FXML
	private TextArea TextArea;
    
	String files = "";
	
	// Event Listener on AnchorPane[#AnchorPane].onDragDropped
	@FXML
	public void onDragDroppedPane(DragEvent event) {
		// TODO Autogenerated
		Dragboard db = event.getDragboard();
        boolean success = false;
        if (db.hasFiles()) {
            success = true;
            String filePath = null;
            for (File file:db.getFiles()) {
                filePath = file.getAbsolutePath();
                Main.paths.add(filePath);
                //System.out.println(filePath);
                files = files + filePath + "\n";
                TextArea.setText(files);
            }
        }
        event.setDropCompleted(success);
        event.consume();
	}
	// Event Listener on AnchorPane[#AnchorPane].onDragOver
	@FXML
	public void onDragOverPane(DragEvent event) {
		// TODO Autogenerated
		 Dragboard db = event.getDragboard();
         if (db.hasFiles()) {
             event.acceptTransferModes(TransferMode.COPY);
         } else {
             event.consume();
         }
	}
	// Event Listener on Button[#ParseButton].onAction
	@FXML
	public void onClickParseButton(ActionEvent event) {
		 System.out.println("ok");
		 Main.logFileObjects.clear();
         try {
     		for (int i = 0; i < Main.paths.size(); i++) {
     			Main.logFileObjects.add(new File(Main.paths.get(i)));
     		}
     		
     		for (int i = 0; i < Main.logFileObjects.size(); i++) {
     			Main.parse(Main.logFileObjects.get(i));
     		}
     		Main.outputToFile();
     		System.out.println("logFileObjects " + Main.logFileObjects.size());
     		System.out.println(Main.logFileObjects);
     		System.out.println("paths " + Main.paths.size());
     		System.out.println(Main.paths);
         }
         catch (Exception e) {
//         	System.out.println(e);
         	Alert alert = new Alert(AlertType.ERROR);
    		alert.setTitle("Exception");
    		alert.setHeaderText(null);
    		alert.setContentText(e + "");
    		alert.showAndWait();
         }
	}
	
	@FXML
	public void onMenuItemClose(ActionEvent event) {
		System.exit(0);
	}
	
	@FXML
	public void onMenuItemAbout(ActionEvent event) {	
		Alert alert = new Alert(AlertType.INFORMATION);
		alert.setTitle("About");
		alert.setHeaderText(null);
		alert.setContentText("Log parser for Radio Club\n\n" +
							"Version: 0.2 alpha \nBuild id: 201704126-1800\n\n" +
							"(c) Copyright 2017 Marius Pocevièius\n\n" + 
							"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n" +
							"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n" + 
							"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.");

		alert.showAndWait();
	}
}
